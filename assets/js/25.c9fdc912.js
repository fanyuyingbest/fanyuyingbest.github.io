(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{121:function(t,r,e){"use strict";e.r(r);var a=e(0),o=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("h3",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("blockquote",[e("p",[t._v("算法模版，最科学的方法就是刷题")])]),t._v(" "),e("p",[t._v("刷题不要从序号开始，很容易卡住；如果按照题型，就一个类型题目去刷，慢慢就变得容易。")]),t._v(" "),e("p",[t._v("刷题的数量，一般建议200-300道就可以满足大部分面试。什么顺序最合适？本篇介绍了模版，可以先按照这个顺序刷。")]),t._v(" "),e("h3",{attrs:{id:"推荐刷题路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐刷题路径"}},[t._v("#")]),t._v(" 推荐刷题路径")]),t._v(" "),e("blockquote",[e("p",[t._v("按照此repo目录刷一遍，如果中间有卡住就先跳过，然后刷一遍LeetCode探索基础卡片，最后快要面试时再刷一遍箭指offer")])]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("algorithm-pattern 练习题")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("LeeCode卡片")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("剑指offer")])])])]),t._v(" "),e("p",[t._v("刷题时间可以合理分配，遇到不会的不用着急，往模版上套就对了，根据面官的提示一步一步来")]),t._v(" "),e("blockquote",[e("p",[t._v("注意：遇到hard有思路就做，没思路就先跳过，先打好基础，后期再刷hard")])]),t._v(" "),e("h3",{attrs:{id:"推荐阅读书籍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读书籍"}},[t._v("#")]),t._v(" 推荐阅读书籍")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/greyireland/awesome-programming-books-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("书籍地址"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/greyireland/algorithm-pattern",target:"_blank",rel:"noopener noreferrer"}},[t._v("持续更新github地址"),e("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=o.exports}}]);