(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{107:function(e,t,s){"use strict";s.r(t);var r=s(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"vue-撸后台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-撸后台"}},[e._v("#")]),e._v(" vue 撸后台")]),e._v(" "),s("h2",{attrs:{id:"_1-为什么要做这个项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么要做这个项目"}},[e._v("#")]),e._v(" 1.为什么要做这个项目")]),e._v(" "),s("blockquote",[s("p",[e._v("大部分时候，开始一个项目，会直接用工具开始搭建一个后台，然后一步一步补充业务代码，很多细节或者说底层就了解的不够透彻,可以借鉴和模仿他人的项目来自己走一遍整个流程，加深理解")])]),e._v(" "),s("p",[e._v("ps:这里参考和借鉴 大佬的文章和项目 "),s("a",{attrs:{href:"https://juejin.cn/post/6844903476661583880",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击查看"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"_2-项目目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-项目目录结构"}},[e._v("#")]),e._v(" 2.项目目录结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("├── build                      // 构建相关  \n├── config                     // 配置相关\n├── src                        // 源代码\n│   ├── api                    // 所有请求\n│   ├── assets                 // 主题 字体等静态资源\n│   ├── components             // 全局公用组件\n│   ├── directive              // 全局指令\n│   ├── filtres                // 全局 filter\n│   ├── icons                  // 项目所有 svg icons\n│   ├── lang                   // 国际化 language\n│   ├── mock                   // 项目mock 模拟数据\n│   ├── router                 // 路由\n│   ├── store                  // 全局 store管理\n│   ├── styles                 // 全局样式\n│   ├── utils                  // 全局公用方法\n│   ├── vendor                 // 公用vendor\n│   ├── views                   // view\n│   ├── App.vue                // 入口页面\n│   ├── main.js                // 入口 加载组件 初始化等\n│   └── permission.js          // 权限管理\n├── static                     // 第三方不打包资源\n│   └── Tinymce                // 富文本\n├── .babelrc                   // babel-loader 配置\n├── eslintrc.js                // eslint 配置项\n├── .gitignore                 // git 忽略项\n├── favicon.ico                // favicon图标\n├── index.html                 // html模板\n└── package.json               // package.json\n\n")])])]),s("h3",{attrs:{id:"_2-1-api-和-views"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-api-和-views"}},[e._v("#")]),e._v(" 2-1 api 和 views")]),e._v(" "),s("p",[e._v("由于项目后台模块很多，且会随着业务发展模块会越来越多，所以前期要做好业务的划分和项目结构，可以将业务前端代码放在 views 文件夹下，api 文件夹放对应的接口文件，和 views 目录下的文件一一对应")]),e._v(" "),s("p",[e._v("如 views 的 atricle 文件夹下主要放 article 的业务模块，对应的 api 文件夹下 article.js,后续的接口文件都可以放在该文件;业务中用到的公用接口，还是需要放到公用接口中，直接引用即可")]),e._v(" "),s("h3",{attrs:{id:"_2-2-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-components"}},[e._v("#")]),e._v(" 2-2 components")]),e._v(" "),s("p",[e._v("components 主要用来放置全局公用组件，比如上传，富文本等，一些页面级的还是放到 views 下")]),e._v(" "),s("h3",{attrs:{id:"_2-3-store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-store"}},[e._v("#")]),e._v(" 2-3 store")]),e._v(" "),s("p",[e._v("当项目耦合度比较大时，需要使用 vuex，比如登陆的 token,用户信息，全局个人配置偏好等，需要但在 vuex 中统一管理，但是记住：不要为了用 vuex 而用 vuex")]),e._v(" "),s("h2",{attrs:{id:"_3-webpack-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack-配置"}},[e._v("#")]),e._v(" 3.webpack 配置")]),e._v(" "),s("blockquote",[s("p",[e._v("本项目是由 vue-cli 的 webpack-template 为基础模版构建的")])]),e._v(" "),s("h3",{attrs:{id:"_3-1-jquery-不建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-jquery-不建议"}},[e._v("#")]),e._v(" 3-1 jquery(不建议)")]),e._v(" "),s("blockquote",[s("p",[e._v("很多项目需要用到第三方插件，这些插件大部分又依赖于 jq,为防止报错，需要在 webpack 的配置文件中做好配置")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" new webpack.ProvidePlugin({\n   $: 'jquery',\n   'jQuery': 'jquery'\n })\n")])])]),s("blockquote",[s("p",[e._v("注意：当 webpack 遇到 require 的第三方库中出现全局的$,jQuery 和 window.jquery 时，会出现 node_module 下的 jq 包 export 出来的东西了")])]),e._v(" "),s("h3",{attrs:{id:"_3-2-alias"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-alias"}},[e._v("#")]),e._v(" 3-2 alias")]),e._v(" "),s("blockquote",[s("p",[e._v("当项目逐渐发展，文件与文件之间的引用就变得复杂了，此时就需要使用到 alias,每个人的习惯不一样，有的喜欢将 alias 指向 src 目录下，再使用相对路径找文件")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" resolve: {\n   alias: {\n     '~': resolve(__dirname,'src')\n   }\n }\n\n //使用\n import stickTop from '~/components/stickTop'\n")])])]),s("blockquote",[s("p",[e._v("或者使用更多的配置")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" alias: {\n   'src': path.resolve(__dirname,'../src'),\n   'components': path.resolve(__dirname,'../src/components'),\n   'api': path.resolve(__dirname,'../src/api'),\n   'utils': path\n }\n\n  // 使用\n  import stickTop from 'components/stickTop'\n  import getArticle from 'api/article'\n")])])]),s("h2",{attrs:{id:"_4-eslint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-eslint"}},[e._v("#")]),e._v(" 4. ESLint")]),e._v(" "),s("blockquote",[s("p",[e._v("代码规范很重要，可以避免基本语法的错误，也保证了代码的可读性，推荐使用 eslint+vscode 写 vue")])]),e._v(" "),s("ul",[s("li",[e._v("第一步，安装 eslint 插件并启动")]),e._v(" "),s("li",[e._v("第二步，扩展设置，文件-首选项-设置，打开设置文件配置")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/varHarrie/varharrie.github.io/issues/10",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode 插件和配置推荐"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/PanJiaChen/vue-element-admin/blob/master/.eslintrc.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("eslint 规则地址"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"_5-封装-axios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-封装-axios"}},[e._v("#")]),e._v(" 5. 封装 axios")]),e._v(" "),s("blockquote",[s("p",[e._v("工作中经常遇到线上出现 bug，但是测试环境很难模拟的问题，可以通过简单的配置就可以在本地调试线上环境，以下就是对 axios 的封装,先来看代码")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  import axios from 'axios'\n  import {Message} from 'element-ui\n  import store form '@/store'\n  import { getToken } from '@/utils/auth'\n\n  //创建axios实例\n  const serve = axios.create({\n    baseURL: process.env.BASE_API, //api的base_url\n    timeout: 5000 //请求超时时间\n  })\n\n  //request 拦截器\n  service.interceptors.request.use(config => {\n    if(store.getter.token){\n      config.headers['X-Token'] = getToken() //让每一个请求都携带token\n    }\n    return config\n  }, error => {\n    console.log(error)\n    Promise.reject(error)\n  })\n\n  // response拦截器\n  service.interceptors.response.use(\n    response => response,\n    // 此处可以对返回的code做不同的功能处理\n    // const res = response.data;\n    // if(res.code !== 200){...}\n\n    error => {\n      console.log('err' + error)\n      Message({\n        message:error.message,\n        type: 'error',\n        duration: 5 * 1000\n      })\n      return Promise.reject(error)\n    }\n  )\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  // 代码的使用\n  import request from '@/utils/request'\n\n  export function getInfo(){\n    return request({\n      url: '/user/info',\n      method: 'get',\n      params\n    })\n  }\n")])])]),s("blockquote",[s("p",[e._v("后台项目，每一个请求都需要带 token 来验证权限，这样的封装我们就可以不用每次都手动来塞 token，或者做一些异常处理；而且因为需要根据不同环境来处理 api，线上出问题时，只需要配置一下 @/config/dev.env.js,再重启一下服务，就能再本地模拟线上环境了")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' module.exports = {\n   NODE_ENV: "development",\n   BASE_API: "https://api-dev", // 修改为"https://api-prod"\n   APP_ORIGIN: "https://xxxx.com" //\n }\n')])])]),s("blockquote",[s("p",[e._v("axios 还可以执行多个并发请求，拦截器，需要花时间研究")])]),e._v(" "),s("h2",{attrs:{id:"_6-多环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-多环境"}},[e._v("#")]),e._v(" 6. 多环境")]),e._v(" "),s("p",[e._v("vue-cli 默认只提供 dev 和 prd 两个环境，真实开发的时候会存在多个，需要修改配置")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' "build:prd": "NODE_ENV=production node build/build.js",\n "build:stg": "NODE_ENV=stg node build/build.js"\n')])])]),s("blockquote",[s("p",[e._v("之后在代码中自行判断")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" var env = process.env.NODE_ENV === 'production' ? config.build.prodEnv : config.build.sitEnv\n")])])]),s("p",[e._v("ps: 后续内容参考 "),s("a",{attrs:{href:"https://juejin.cn/post/6844903476661583880",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击查看"),s("OutboundLink")],1),e._v(" 后续只按照文档开始做项目(提高效率)")])])}),[],!1,null,null,null);t.default=a.exports}}]);